# The GroupName here is used to identify your company or business unit that
# created this webhook.
# For example, this may be "acme.mycompany.example".
# This name will need to be referenced in each Issuer's `webhook` stanza to
# inform cert-manager of where to send ChallengePayload resources in order to
# solve the DNS01 challenge.
# This group name should be **unique**, hence using your own company's domain
# here is recommended.
groupName: acme.mycompany.example

# if enabled (default) the Chart will create the necessary Role for the
# webhook to access the specified secret.
ddApplicationSecret:
  enabled: true
  secretName: "ovh-credentials"

certManager:
  namespace: cert-manager
  serviceAccountName: cert-manager

# If enabled (default) the webhook will run as the specifieduser and group.
# Furthermore, the specified allowPrivilegeEscalation is applied to the pod.
securityContext:
  enabled: true
  runAsUser: 1000
  runAsGroup: 1000
  allowPrivilegeEscalation: false

image:
  repository: baarde/cert-manager-webhook-dd
  # tag: latest
  pullPolicy: IfNotPresent
  # Use this set to assign a list of default pullSecrets
  pullSecrets: []
    # - name: docker-registry-secret
    # - name: internal-registry-secret

nameOverride: ""
fullnameOverride: ""

# Use this field to add environment variables relevant to this webhook.
# These fields will be passed on to the container when Chart is deployed.
environment:
  # Use these variables to configure the HTTP_PROXY environment variables
  # HTTP_PROXY: "http://proxy:8080"
  # HTTPS_PROXY: "http://proxy:8080"
  # NO_PROXY: 127.0.0.1,localhost,10.0.0.0/8

service:
  type: ClusterIP
  port: 443

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
